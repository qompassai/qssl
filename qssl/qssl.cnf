#HOME                    = ${ENV::HOME}
#oid_section             = oid 
openssl_conf            = openssl_init
config_diagnostics      = 1
[openssl_init]                                   ### Qompassl initialization
alg_section             = evp_settings
engines                 = engine_section
oid                     = oid_section
providers               = provider_sect
random                  = random
ssl_conf                = ssl_configuration
[evp_settings]
fips_mode = yes
[engine_section]
afalg                   = afalg_eng
#capi                    = capi_eng
devcrypto               = devcrypto_eng
#gost                    = gost_eng
#pkcs11                  = pkcs11_eng
#tpm2tss                = tpm2tss_eng
loader_attic            = loader_attic_eng
#padlock                 = padlock_eng # Only works if you run lscpu | grep -i padlock and get an output
[afalg_eng]
#default_algorithms      = ALL
engine_id               = afalg
dynamic_path            = /opt/QAI/qompassl/lib64/engines-3/afalg.so
init                    = 1
#[capi_eng]
#engine_id               = capi
#dynamic_path            = /opt/QAI/qompassl/lib64/engines-3/capi.so
#init                    = 1
[devcrypto_eng]
engine_id               = devcrypto 
dynamic_path            = /opt/QAI/qompassl/lib64/engines-3/devcrypto.so
init                    = 1
#default_algorithms      = ALL
#[gost_eng]
#engine_id               = gost
#dynamic_path            = /opt/QAI/qompassl/lib64/engines-3/gost.so
#init                    = 1
#default_algorithms      = ALL
#[pkcs11_eng]
#engine_id               = pkcs11
#dynamic_path            = /opt/QAI/qompassl/lib64/engines-3/libpkcs11.so
#init                    = 1
#default_algorithms      = ALL
#[tpm2tss_eng]
#engine_id              = tpm2tss
#dynamic_path           = /usr/lib/engines-3/tpm2.so
#init                   = 1
#default_algorithms     = ALL
[loader_attic_eng]
engine_id               = loader_attic
dynamic_path            = /opt/QAI/qompassl/lib64/engines-3/loader_attic.so
init                    = 1
#default_algorithms      = ALL
#[padlock_eng]
#engine_id               = padlock
#dynamic_path            = /opt/QAI/qompassl/lib64/engines-3/padlock.so
#init                    = 1
[oid_section]
[qai_oid]
mldsa44 = 2.16.840.1.101.3.4.3.32
mldsa65 = 2.16.840.1.101.3.4.3.33
mldsa87 = 2.16.840.1.101.3.4.3.34
[provider_sect]
base                    = base_sect
default                 = default_sect
legacy                  = legacy_sect
fips                    = fips_sect
oqsprovider             = oqs_sect
pkcs11                  = pkcs11_sect
#tpm2                   = tpm2_sect
[default_sect]
activate                = 1
properties              = "provider=default", "security_level=3"
[base_sect]
activate                = 1
[fips_sect]
activate                = 1
properties              = "provider=fips", "security_level=3"
module                  = /opt/QAI/qompassl/lib64/ossl-modules/fips.so
algorithms              = ALL:!X25519:!X448:!Ed25519:!Ed448
[legacy_sect]
activate                = 1
module                  = /usr/lib/ossl-modules/legacy.so
[oqs_sect]
activate                = 1
properties              = "provider=oqsprovider", "security_level=3"
module                  = /opt/QAI/qompassl/lib64/ossl-modules/oqsprovider.so
[pkcs11_sect]
activate = 1
properties              = "provider=pkcs11", "security_level=3"
module                  = /opt/QAI/qompassl/lib64/ossl-modules/pkcs11.so
#[tpm2_sect]
#activate               = 1
#module                 = /usr/lib/ossl-modules/tpm2.so
#algorithms             = ALL
[random]
random                  = CTR-DRBG           # or HASH-DRBG, HMAC-DRBG
cipher                  = AES-256-CTR        # Only for CTR-DRBG; default is AES-256-CTR
digest                  = SHA256             # Only for HASH-DRBG or HMAC-DRBG
seed                    = JITTER             # Or another source, e.g., rdrand, if available
[ssl_configuration]                             #SSL Config
system_default          = system_default_sect
level3                  = tls_seclevel_3
fips                    = fips_ssl_sect
oqs                     = oqs_ssl_sect
tpm2                    = tpm2_ssl_sect
[system_default_sect]                            #System Default TLS
CipherString            = AES256-GCM-SHA384:AES256-SHA:AES256-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:DEFAULT:@STRENGTH:@SECLEVEL=2
Ciphersuites            = TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256
Groups                  = P-256:P-384:P-521:X25519:X448
MinProtocol             = TLSv1.2
MaxProtocol             = TLSv1.3
SignatureAlgorithms     = ECDSA+SHA256:ECDSA+SHA384:RSA-PSS+SHA256:RSA-PSS+SHA384
[tls_seclevel_3]                                #TLS Level 3 Sec
CipherString            = AES256-GCM-SHA384:AES256-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:DEFAULT:@STRENGTH:@SECLEVEL=3
CipherSuites            = TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
Groups                  = X25519:P-256:P-384:P-521:X448:x25519_mlkem768:x25519_mlkem1024:p384_mlkem768:mlkem768:mlkem512:mlkem1024
MinProtocol             = TLSv1.2
MaxProtocol             = TLSv1.3
SignatureAlgorithms     = ECDSA+SHA256:ECDSA+SHA384:RSA-PSS+SHA256:RSA-PSS+SHA384
[fips_ssl_sect]                                  #FIPS SECT
CipherString            = FIPS:@STRENGTH:!eNULL:!aNULL
CipherSuites            = TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256
Groups                  = P-256:P-384:P-521
MinProtocol             = TLSv1.2
MaxProtocol             = TLSv1.3
SignatureAlgorithms     = ECDSA+SHA256:ECDSA+SHA384:RSA-PSS+SHA256:RSA-PSS+SHA384
[oqs_ssl_sect]                           #OQSProvider TLS
CipherString            = AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DEFAULT:@STRENGTH:@SECLEVEL=2
CipherSuites            = TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256
Groups                  = x25519_mlkem768:x25519_mlkem1024:p384_mlkem768:mlkem768:mlkem512:mlkem1024
MinProtocol             = TLSv1.2
MaxProtocol             = TLSv1.3
Properties              = provider=oqsprovider
SignatureAlgorithms     = falcon512:falcon1024:mldsa65:mldsa87
[tpm2_ssl_sect]
CipherString        = DEFAULT:@SECLEVEL=2
CipherSuites        = TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256
Groups              = P-256:P-384:P-521:X25519:X448
MinProtocol         = TLSv1.2
MaxProtocol         = TLSv1.3
Properties          = provider=tpm2
SignatureAlgorithms = RSA-PSS+SHA256:ECDSA+SHA256
                        .include /etc/ssl/profiles/oid.cnf
                        .include /etc/ssl/profiles/algos/default_algos.cnf
                        .include /etc/ssl/profiles/algos/legacy_algos.cnf
                        .include /opt/QAI/qompassl/ssl/profiles/oid.cnf
                        .include /opt/QAI/qompassl/ssl/profiles/random_sect.cnf
                        .include /opt/QAI/qompassl/ssl/profiles/tsa_sect.cnf
#                        .include /opt/QAI/qompassl/ssl/fipsmodule.cnf
[ ca ]                                           #CA Sect
default_ca	            = CA_default
[ CA_default ]
dir                     = /etc/pki/qompass-ca 
certs		            = $dir/certs
crl_dir		            = $dir/crl
database	            = $dir/index.txt
serial		            = $dir/serial
crlnumber	            = $dir/crlnumber
new_certs_dir	        = $dir/newcerts
x509_extensions	        = usr_cert
name_opt 	            = ca_default
cert_opt 	            = ca_default
certificate	            = $dir/cacert.pem
default_days	        = 365
default_crl_days        = 30
default_md	            = sha256
preserve	            = yes
policy                  = policy_loose
[ policy_match ]        # Policy Match
countryName		        = match
stateOrProvinceName	    = match
organizationName	    = match
organizationalUnitName	= optional
commonName		        = supplied
emailAddress		    = optional
[ policy_loose ]
countryName             = optional
stateOrProvinceName     = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional
####################################################################
[ req ]
attributes		        = req_attributes
default_bits		    = 3072
default_md              = sha256
default_keyalg          = EC
default_keyfile         = privkey.pem
distinguished_name      = dn
prompt                  = no
req_extensions          = v3_req
x509_extensions         = v3_req
string_mask             = utf8only
[dn]                                             #Designated Name
C                       = US
ST                      = Washington
L                       = Spokane
O                       = Qompass AI
OU                      = Security
CN                      = qompass.ai
emailAddress            = map@qompass.ai
[ req_attributes ]
[ usr_cert ]
1.3.6.1.5.5.7.1.24      = DER:30:03:02:01:05
[alt_names]
DNS.1                   = qompass.ai
DNS.2                   = www.qompass.ai
DNS.3                   = api.qompass.ai
[ client_cert ]
basicConstraints        = CA:FALSE
nsCertType              = client, email
keyUsage                = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage        = clientAuth, emailProtection
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid,issuer
[ ocsp ]
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
[ req_attributes ]
challengePassword = A challenge password
unstructuredName = An optional company name
[ server_cert ]                                  #Server Cert
basicConstraints        = CA:FALSE
keyUsage                = critical,digitalSignature,keyEncipherment
extendedKeyUsage        = critical,serverAuth,clientAuth
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid,issuer
authorityInfoAccess     = OCSP;URI:http://ocsp.qompass.ai
crlDistributionPoints   = URI:http://crl.qompass.ai/qompass.crl
1.3.6.1.5.5.7.1.24      = DER:30:03:02:01:05  # RFC6961 TLS Multistaple SCT
[ crl_ext ]
authorityKeyIdentifier  = keyid:always
[ proxy_cert_ext ]
basicConstraints        = critical,CA:FALSE
keyUsage                = critical, digitalSignature, keyEncipherment
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid,issuer
proxyCertInfo           = critical,language:id-ppl-anyLanguage,pathlen:0,policy:foo
[ tsa ]
[ tsa_config1 ]
dir                     = /etc/pki/qompass-ca
serial                  = $dir/tsaserial
crypto_device           = builtin
signer_cert             = $dir/tsacert.pem
certs                   = $dir/cacert.pem
signer_key              = $dir/private/tsakey.pem
signer_digest           = sha256
default_policy          = tsa_policy1
other_policies          = tsa_policy2, tsa_policy3
digests                 = sha256, sha384, sha512
accuracy                = secs:1, millisecs:500, microsecs:100
clock_precision_digits  = 0
ordering                = yes
tsa_name                = yes
ess_cert_id_chain       = no
ess_cert_id_alg         = sha256
[ v3_ca ]                                        #V3_CA
basicConstraints        = critical,CA:true,pathlen:0
keyUsage                = critical,keyCertSign,cRLSign
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always,issuer
authorityInfoAccess     = OCSP;URI:http://ocsp.qompass.ai
crlDistributionPoints   = URI:http://crl.qompass.ai/qompass.crl
[ v3_req ]
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
subjectAltName = @alt_names
[ v3_tsacert ]                                  #V3 TSACERT
basicConstraints        = critical, CA:false
keyUsage                = critical, digitalSignature, nonRepudiation
extendedKeyUsage        = critical, timeStamping
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid,issuer
policyIdentifier        = tsa_cert_policy
